.workout[data-url=workout_path(id: @workout.date) class=(@workout.past? ? 'past' : 'future')]
  h1= time_tag @workout.date

  p
    strong Log Exercise
    = select_tag :exercise, options_from_collection_for_select(current_user.exercises, :slug, :name), prompt: @workout.log_exercise_prompt

  .exercises
    - @workout.workout_exercises.each do |exercise|
      == render partial: 'exercise', locals: { exercise: exercise.decorate }

  .points
    .training-area-points
      - @workout.training_area_points.each do |training_area_point|
        == render partial: 'training_area_point', locals: { training_area_point: training_area_point }

    .workout-point
      h2 Motivation level:
      == render partial: 'slider', locals: { id: 'motivation_level', value: @workout.motivation_level.to_i }

    .workout-point
      h2 Energy level:
      == render partial: 'slider', locals: { id: 'energy_level', value: @workout.energy_level.to_i }

  a.button[href='#' data-role="save-workout"]
    span.normal Save Workout
    span.spinner
      i.fa.fa-spinner.fa-spin.spinner

  a.button[href='#' data-role="close-workout"] Close

coffee:
  $ ->
    for i in $('.slider')
      console.log($(i))
      console.log($(i).data().value)
      value = parseInt($(i).data().value)
      console.log "is #{value}"
      $(i).slider
        range: 'max'
        min: 0
        max: 10
        value: value
        slide: (e, ui) ->
          $(@).parents('.slider-container').find('.value').text(ui.value)

